/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rekapanggaran;

import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import popup.EntryGaji;
import popup.EntryGajiDetail;
import popup.MaterialData;

/**
 *
 * @author BadikIrwan
 */
public class EntryDataGaji extends javax.swing.JPanel {
    EntryGaji entryGaji = new EntryGaji(null, true, this);
    EntryGajiDetail entryGajiDetail = new EntryGajiDetail(null, true, this);
    private Component rootPane;
    
    /**
     * Creates new form EntryGaji
     */
    public EntryDataGaji() {
        initComponents();
        Pekerjaan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbKegiatan = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pilih kegiatan"));

        jLabel2.setText("Kegiatan");

        cbKegiatan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH" }));
        cbKegiatan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbKegiatanItemStateChanged(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/if_sync-01_186384.png"))); // NOI18N
        jButton1.setToolTipText("Refresh kegiatan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cbKegiatan, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbKegiatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "KEGIATAN", "MINGGU KE", "TANGGAL", "TOTAL"
            }
        ));
        jScrollPane2.setViewportView(tabel);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setToolTipText("Hapus Data");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnShow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/show.png"))); // NOI18N
        btnShow.setText("Detail");
        btnShow.setToolTipText("Detail Data");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.setToolTipText("Tambah Data");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("DATA GAJI");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jLabel1)
                .addContainerGap(327, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
       int row = tabel.getSelectedRow();
        try {
            if(row == -1) {
                JOptionPane.showMessageDialog(rootPane, "Anda belum memilih tabel");
            } else {
                Connection con = Koneksi.connect();
                Statement st = con.createStatement();
                st.executeUpdate("DELETE FROM tbl_data_gaji WHERE id='"+tabel.getModel().getValueAt(row, 0)+"'");
                JOptionPane.showMessageDialog(rootPane, "Data berhasil dihapus");
                
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        loadData();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
         int row = tabel.getSelectedRow();
        try {
            if(row == -1) {
                JOptionPane.showMessageDialog(rootPane, "Anda belum memilih tabel");
            } else {
                Connection con = Koneksi.connect();
                Statement st = con.createStatement();
                ResultSet sql = st.executeQuery("SELECT tbl_kegiatan.*, tbl_data_gaji.* FROM tbl_kegiatan INNER JOIN tbl_data_gaji ON tbl_data_gaji.id_kegiatan = tbl_kegiatan.pekerjaan WHERE id='"+tabel.getModel().getValueAt(row, 0)+"'");
                if(sql.next()) {
                    entryGajiDetail.id.setText(sql.getString("id"));
                    entryGajiDetail.id1.setText(sql.getString("id"));
                    entryGajiDetail.lbPekerjaan.setText(sql.getString("pekerjaan"));
                    entryGajiDetail.lbLokasi.setText(sql.getString("lokasi"));
                    entryGajiDetail.lbNamacv.setText(sql.getString("nama_cv"));
                    entryGajiDetail.lbTanggal.setText(sql.getString("tanggal"));
                    entryGajiDetail.lbTahun.setText(sql.getString("thn_anggaran"));
                    entryGajiDetail.lbMingguke.setText(sql.getString("minggu_ke"));
                    entryGajiDetail.loadData();
                    entryGajiDetail.show();
                }
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnShowActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        //try {
        //   Connection con = Koneksi.connect();
        //   Statement st = con.createStatement();
        //   ResultSet rs = st.executeQuery("SELECT MAX(id_kegiatan) FROM tbl_data_gaji");
        //   while(rs.next()) {
        //       int a = rs.getInt(1);
        //       entryGaji.id.setText("000"+Integer.toString(a+1));
        //   }
        //} catch (Exception e) {
        //    JOptionPane.showMessageDialog(null, e.getMessage(), "Pesan", JOptionPane.INFORMATION_MESSAGE);
        //}
        entryGaji.show();
    }//GEN-LAST:event_btnTambahActionPerformed

    private void cbKegiatanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbKegiatanItemStateChanged
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("KEGIATAN");
        model.addColumn("MINGGU KE");
        model.addColumn("TANGGAL");
        model.addColumn("TOTAL");
        try {
            Connection con = Koneksi.connect();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT tbl_kegiatan.*, tbl_data_gaji.* FROM tbl_kegiatan INNER JOIN tbl_data_gaji ON tbl_kegiatan.pekerjaan = tbl_data_gaji.id_kegiatan WHERE tbl_kegiatan.pekerjaan ='"+cbKegiatan.getSelectedItem().toString()+"'");
            if(rs.next() == true) {
                do {
                        model.addRow(new Object[]{
                        rs.getString("id"), rs.getString("pekerjaan"), rs.getString("minggu_ke"), rs.getString("tanggal"),
                        rs.getString("total")});
                        tabel.setModel(model);
                    } while(rs.next());
            } else {
                tabel.setModel(model);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbKegiatanItemStateChanged

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        loadData();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cbKegiatan.removeAllItems();
        cbKegiatan.addItem("PILIH");
        Pekerjaan();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void Pekerjaan() {
        try {
            Connection con = Koneksi.connect();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT pekerjaan FROM tbl_kegiatan");
            while(rs.next()) {
                cbKegiatan.addItem(rs.getString("pekerjaan"));
            }
        } catch (Exception e) {
        }
    }
    
     public void loadData() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("KEGIATAN");
        model.addColumn("MINGGU KE");
        model.addColumn("TANGGAL");
        model.addColumn("TOTAL");
        try {
            Connection con = Koneksi.connect();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tbl_data_gaji");
            while(rs.next()) {
               model.addRow(new Object[]{
               rs.getString("id"), rs.getString("id_kegiatan"), rs.getString("minggu_ke"), rs.getString("tanggal"),
               rs.getString("total")});
               tabel.setModel(model);
            }
        } catch (Exception e) {
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnTambah;
    public javax.swing.JComboBox<String> cbKegiatan;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
